name: Update with Latest Data

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario' 
  push:
      paths:
        - .github/workflows/run.yml
  schedule:
    - cron:  '30 19 * * 6'

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    env:
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      LANG: "en_US.UTF-8"
      LC_ALL: "en_US.UTF-8"
      USE_BSPM: "true"
      _R_CHECK_FORCE_SUGGESTS_: "false"
      
    steps:
      - uses: actions/checkout@v2
      - uses: quarto-dev/quarto-actions/setup@v2
      - uses: quarto-dev/quarto-actions/install-quarto@v1
      - name: Bootstrap
        run: |
            chmod 0755 run.sh
            ./run.sh bootstrap
      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
          GITHUB_PAT: ${{secrets.PAT}}
        run: |
          ./run.sh install_all
          Rscript -e "remotes::install_github('r-hub/sysreqs', auth_toke = '${{secrets.GITHUB_TOKEN}}')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}
      - name: Run script
        env:
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}
        run: |-
          Rscript -e "source('scrape.R')"
      - run: |
          Rscript -e "source('aggregate.R')"
      - run: |
          quarto --version
      - name: quarto
        run: |-
          quarto render
      - name: Commit results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "[skip actions] Update the latest data" -a || echo "[skip actions] No changes to commit"
          git push https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git HEAD:${{ github.ref }} || echo "No changes to commit"
